buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1"
    }
}

// use assertj generator from gradle example

def assertjOutput = file('src/test/java-gen')

configurations {
    assertj
}

apply plugin: "org.sonarqube"
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.7.6.201602180812'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '19.0'

    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    // https://mvnrepository.com/artifact/es.usc.citius.hipster/hipster-all
    compile group: 'es.usc.citius.hipster', name: 'hipster-all', version: '1.0.1'


    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12',
            'ch.qos.logback:logback-classic:1.0.9'


    testCompile group: 'junit', name: 'junit', version: '4.11'

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.5.2'
    testCompile group: 'org.assertj', name: 'assertj-guava', version: '3.0.0'

    assertj 'org.assertj:assertj-assertions-generator:2.0.0'
    assertj project(':squarly-core')

}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
            srcDir 'src/test/java-gen'
        }
    }
}

task assertjClean(type: Delete) {
    delete assertjOutput
}

task assertjGen(dependsOn: assertjClean, type: JavaExec) {
    doFirst {
        if (!assertjOutput.exists()) {
            logger.info("Creating `$assertjOutput` directory")

            if (!assertjOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$assertjOutput` directory")
            }
        }
    }

    main 'org.assertj.assertions.generator.cli.AssertionGeneratorLauncher'
    classpath = files(configurations.assertj)
    workingDir = assertjOutput
    args = [
            //'-H',
            'io.nbe.squarly.model'
    ]
}

check.dependsOn jacocoTestReport

compileTestJava.dependsOn(assertjGen)

